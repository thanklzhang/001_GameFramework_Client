// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GS2GC.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GS2GC {

  /// <summary>Holder for reflection information generated from GS2GC.proto</summary>
  public static partial class GS2GCReflection {

    #region Descriptor
    /// <summary>File descriptor for GS2GC.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GS2GCReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtHUzJHQy5wcm90bxIFR1MyR0MaEFJlc3VsdENvZGUucHJvdG8iaQoSU3lu",
            "Y1BsYXllckJhc2VJbmZvEg8KB2FjY291bnQYASABKAkSEAoIbmlja05hbWUY",
            "AiABKAkSDQoFbGV2ZWwYAyABKAUSDAoEY29pbhgEIAEoBRITCgtwb3J0cmFp",
            "dFVSTBgFIAEoCSpOCgVNc2dJZBIJCgVGaXJzdBAAEgoKBUJlZ2luELBtEiQK",
            "H0dTMkdDX0Zyb21DU19TeW5jUGxheWVyQmFzZUluZm8QtW0SCAoDRW5kEJRu",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ResultCodeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GS2GC.MsgId), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GS2GC.SyncPlayerBaseInfo), global::GS2GC.SyncPlayerBaseInfo.Parser, new[]{ "Account", "NickName", "Level", "Coin", "PortraitURL" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MsgId {
    [pbr::OriginalName("First")] First = 0,
    [pbr::OriginalName("Begin")] Begin = 14000,
    [pbr::OriginalName("GS2GC_FromCS_SyncPlayerBaseInfo")] Gs2GcFromCsSyncPlayerBaseInfo = 14005,
    [pbr::OriginalName("End")] End = 14100,
  }

  #endregion

  #region Messages
  public sealed partial class SyncPlayerBaseInfo : pb::IMessage<SyncPlayerBaseInfo> {
    private static readonly pb::MessageParser<SyncPlayerBaseInfo> _parser = new pb::MessageParser<SyncPlayerBaseInfo>(() => new SyncPlayerBaseInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SyncPlayerBaseInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GS2GC.GS2GCReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncPlayerBaseInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncPlayerBaseInfo(SyncPlayerBaseInfo other) : this() {
      account_ = other.account_;
      nickName_ = other.nickName_;
      level_ = other.level_;
      coin_ = other.coin_;
      portraitURL_ = other.portraitURL_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncPlayerBaseInfo Clone() {
      return new SyncPlayerBaseInfo(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickName" field.</summary>
    public const int NickNameFieldNumber = 2;
    private string nickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NickName {
      get { return nickName_; }
      set {
        nickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "coin" field.</summary>
    public const int CoinFieldNumber = 4;
    private int coin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Coin {
      get { return coin_; }
      set {
        coin_ = value;
      }
    }

    /// <summary>Field number for the "portraitURL" field.</summary>
    public const int PortraitURLFieldNumber = 5;
    private string portraitURL_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PortraitURL {
      get { return portraitURL_; }
      set {
        portraitURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SyncPlayerBaseInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SyncPlayerBaseInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (NickName != other.NickName) return false;
      if (Level != other.Level) return false;
      if (Coin != other.Coin) return false;
      if (PortraitURL != other.PortraitURL) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (NickName.Length != 0) hash ^= NickName.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Coin != 0) hash ^= Coin.GetHashCode();
      if (PortraitURL.Length != 0) hash ^= PortraitURL.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (NickName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NickName);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (Coin != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Coin);
      }
      if (PortraitURL.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PortraitURL);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (NickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NickName);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Coin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Coin);
      }
      if (PortraitURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PortraitURL);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SyncPlayerBaseInfo other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.NickName.Length != 0) {
        NickName = other.NickName;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Coin != 0) {
        Coin = other.Coin;
      }
      if (other.PortraitURL.Length != 0) {
        PortraitURL = other.PortraitURL;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            NickName = input.ReadString();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            Coin = input.ReadInt32();
            break;
          }
          case 42: {
            PortraitURL = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
